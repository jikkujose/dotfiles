snippet source "Source location for Ruby Gems" b
source 'https://rubygems.org'

$0
endsnippet

snippet s.files "files for gemspec" b
s.files = \`git ls-files -z\`.split("\x0")
endsnippet

snippet s.homepage
s.homepage = "http://github.com/JikkuJose/"
endsnippet

snippet pretty_time
%a %h %d %Y %r
endsnippet

snippet mt_template
require 'minitest'
require 'minitest/reporters'
require_relative '${1: file_name}'

Minitest::Reporters.use! [Minitest::Reporters::DefaultReporter.new({detailed_skip: false})]

class ${2:ClassName} < Minitest::Test
  def setup
  end
end

Minitest.autorun
endsnippet

snippet load_path "Adds lib directory to load path." b
$LOAD_PATH << File.join(File.dirname(__FILE__), "..", "lib")
endsnippet

snippet test_helper "Test helper boilerplate" b
require 'minitest/autorun'
require 'minitest/reporters'

$LOAD_PATH << File.join(File.dirname(__FILE__), "..", "lib")

Minitest::Reporters.use! Minitest::Reporters::DefaultReporter.new({detailed_skip: false})
endsnippet

snippet rake_test_task "Rake task for running all tests"
require "bundler/gem_tasks"
require 'rake/testtask'

Rake::TestTask.new("test:all") do |task|
  task.libs << %w(test lib)
  task.test_files = FileList["test/**/test_*"]
end

task :default => "test:all"
endsnippet

snippet hacker_rank "HackerRank Boilerplate"
class HackerRank
class HackerRank
  def initialize(source: STDIN)
    @input = source.read
  end

  def result
    @input
  end

  def self.run
    if local?
      puts new(source: DATA).result
    else
      puts new.result
    end
  end

  def self.local?
    ENV['UPSTART_JOB'].nil?
  end
end

HackerRank.run
__END__
endsnippet
